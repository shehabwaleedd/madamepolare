@use "sass:map";
@import "@/styles/variables";

$breakpoints: (
    small-phone: 400px,
    phone: 480px,
    small-tablet: 640px,
    medium-tablet: 788px,
    large-tablet: 900px,
    ipad: 1025px,
    laptop: 1280px,
    desktop: 1440px,
    large-screen: 1500px,
    tv: 1920px,
    fourk: 2560
);

$spacings: (
    xxs: 0.25rem,
    xs: 0.5rem,
    sx: 0.75rem,
    sm: 1rem,
    ms: 1.25rem,
    md: 1.5rem,
    ml: 1.75rem,
    lg: 2rem,
    xl: 3rem,
    xxl: 4rem
);


@mixin flexCenter($direction) {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: $direction;
}

@mixin grid($columns: 1fr 1fr, $align: center, $justify: center, $gap: $spacing-sm) {
    display: grid;
    grid-template-columns: $columns;
    gap: $gap;
    align-items: $align;
    justify-content: $justify;
}

@mixin twoColumnGrid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: $spacing-sm;
}

@mixin absoluteCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin respond-to($breakpoint, $type: max) {
    @if map.has-key($breakpoints, $breakpoint) {
        @media (#{$type}-width: map.get($breakpoints, $breakpoint)) {
            @content;
        }
    }
}

@mixin spacing($size, $property: both) {
    @if map.has-key($spacings, $size) {
        @if $property ==both {
            margin: map.get($spacings, $size);
            padding: map.get($spacings, $size);
        }

        @else if $property ==margin {
            margin: map.get($spacings, $size);
        }

        @else if $property ==padding {
            padding: map.get($spacings, $size);
        }
    }
}

@mixin font-style($size, $line-height, $weight: 400) {
    font: $weight #{$size}/#{$line-height} $title-font;
}


@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;

}

@mixin primaryButton($backgroundColor: $background-color, $color: $title-color, $borderColor: $border-color) {
    gap: $spacing-xs;
    font-size: $small-font-size;
    font-family: $body-font;
    background-color: $backgroundColor;
    color: $color;
    border-radius: $spacing-xs;
    border: $borderColor;
    padding: $spacing-xxs;
}

@mixin buttonHover($backgroundColor: $background-color, $color: $title-color) {
    &:hover {
        background-color: darken($backgroundColor, 2%);
        color: $color;
        border-radius: $spacing-xs;
    }
}

@mixin float-animation($name: float, $duration: 4s, $y-offset: 10px) {
    @keyframes #{$name} {
        0% {
            transform: translateY(0);
        }

        50% {
            transform: translateY(-#{$y-offset});
        }

        100% {
            transform: translateY(0);
        }
    }
}

.sectionText {
    font-size: $body-font-size;
    line-height: 1.3;

    @include respond-to(large-screen) {
        font-size: $big-font-size;
    }

    @include respond-to(phone) {
        font-size: $normal-font-size !important;
    }

}

.section {
    @include flexCenter(column);
    gap: 1rem;
    width: 100%;
    padding: $spacing-section;

    @include respond-to(phone) {
        padding: $spacing-section-mobile;
    }

}

.sectionTitle {
    text-align: center;
    font-size: $semi-big-font-size;
    font-family: $title-font;
    max-width: 600px;
    margin: 0 auto;
    max-width: $container-max-width-lg;
    font-family: $title-font;


    @include respond-to(large-screen, max) {
        font-size: $bigger-font-size;
        max-width: $container-max-width-xl;
    }


    @include respond-to(ipad) {
        font-size: $semi-big-font-size;
    }

}

@mixin containerMaxWidth {
    max-width: 92%;
    margin: 0 auto;

    @include respond-to(large-screen, min) {
        max-width: 85%;
    }

    @include respond-to(desktop, max) {
        max-width: 92%;
    }

    @include respond-to(ipad, max) {
        padding: $spacing-sm;
    }

    @include respond-to(phone, max) {
        max-width: $container-max-width-md;
    }
}


.sectionContainer {
    @include flexCenter(column);
    width: 100%;
    gap: $spacing-sm;
    position: relative;
    padding: $spacing-md;
    @include containerMaxWidth;

}

.page {
    position: relative;
    z-index: 2;
    background-color: $background-color;
    @include flexCenter(column);
    width: 100%;
}

@mixin gradient-background($gradients...) {
    $background-image: (
    );

@each $gradient in $gradients {
    $x: nth($gradient, 1);
    $y: nth($gradient, 2);
    $color: nth($gradient, 3);
    $start: nth($gradient, 4);
    $end: nth($gradient, 5);

    $background-image: append($background-image,
            radial-gradient(circle at #{$x} #{$y}, #{$color} #{$start}, transparent #{$end}),
            comma);
}

background-image: $background-image;
background-blend-mode: normal;
}

.header {
    width: 100%;
    @include flex(column, center, flex-start);

    h2 {
        font-size: $normal-font-size;
        color: $title-color;
        font-family: $title-font;
        letter-spacing: -0.02em;
        font-weight: 400;
    }
}